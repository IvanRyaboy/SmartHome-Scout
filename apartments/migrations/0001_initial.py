# Generated by Django 5.2.3 on 2025-07-07 15:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floors_total', models.IntegerField(verbose_name='Этажность')),
                ('wall_material', models.CharField(blank=True, max_length=100, verbose_name='Материал стен')),
                ('construction_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='Год постройки')),
                ('house_amenities', models.CharField(blank=True, max_length=255, verbose_name='Обустройство дома')),
                ('parking', models.CharField(blank=True, max_length=255, verbose_name='Парковка')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(blank=True, max_length=255, verbose_name='Район')),
                ('microdistrict', models.CharField(blank=True, max_length=255, verbose_name='Микрорайон')),
                ('street', models.CharField(max_length=100, verbose_name='Улица')),
                ('house_number', models.CharField(max_length=255, verbose_name='Номер дома')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Широта')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Долгота')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название области')),
            ],
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(verbose_name='Цена')),
                ('total_area', models.FloatField(verbose_name='Общая площадь')),
                ('living_area', models.FloatField(verbose_name='Жилая площадь')),
                ('kitchen_area', models.FloatField(verbose_name='Площадь кухни')),
                ('balcony_area', models.FloatField(blank=True, null=True, verbose_name='Площадь балкона')),
                ('balcony', models.BooleanField(verbose_name='Балкон')),
                ('balcony_type', models.CharField(blank=True, choices=[('Classic', 'Классический'), ('French', 'Французский'), ('Extended', 'С выносом'), ('Loggia', 'Лоджия')], default=None, null=True, verbose_name='Тип балкона')),
                ('room_count', models.IntegerField(verbose_name='Количество комнат')),
                ('description', models.TextField(verbose_name='Описание')),
                ('owner', models.CharField(max_length=255, verbose_name='Владелец')),
                ('floor', models.IntegerField(verbose_name='Этаж')),
                ('sale_conditions', models.CharField(choices=[('Alternative', 'Альтернативная продажа'), ('Open', 'Свободная продажа'), ('Condition', 'С условиями')], default='Open', max_length=20, verbose_name='Условия продажи')),
                ('bathroom_count', models.IntegerField(blank=True, null=True, verbose_name='Количество санузлов')),
                ('ceiling_height', models.FloatField(blank=True, null=True, verbose_name='Высота потолков')),
                ('renovation', models.CharField(blank=True, max_length=100, verbose_name='Ремонт')),
                ('condition', models.CharField(blank=True, choices=[('New', 'Новое'), ('Almost', 'Почти новое'), ('Good', 'Хорошее'), ('Fair', 'Удовлетворительное'), ('Renovation', 'Требующее ремонта'), ('Uninhabitable', 'Аварийное')], default='New', max_length=20, verbose_name='Состояние')),
                ('contract_number', models.CharField(blank=True, max_length=255, verbose_name='Номер договора')),
                ('contract_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата договора')),
                ('level_count', models.IntegerField(blank=True, null=True, verbose_name='Число уровней')),
                ('ownership_type', models.CharField(blank=True, choices=[('State', 'Государственная'), ('Private', 'Частная'), ('Shared', 'Общая долевая'), ('Joint', 'Общая совместная'), ('Collective', 'Коллективная'), ('Foreign', 'Иностранная')], default='Private', max_length=20, verbose_name='Собственность')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apartments', to='apartments.building', verbose_name='Дом')),
            ],
        ),
        migrations.AddField(
            model_name='building',
            name='location',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='house', to='apartments.location', verbose_name='Местоположение'),
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название города')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='towns', to='apartments.region', verbose_name='Область')),
            ],
        ),
        migrations.AddField(
            model_name='location',
            name='town',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='apartments.town', verbose_name='Населённый пункт'),
        ),
    ]
